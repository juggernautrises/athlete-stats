version: "3.3"

services:
  traefik:
    restart: always
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=$EMAIL"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - /var/run/docker.sock:/var/run/docker.sock
  as_db:
    image: "postgres"
    env_file:
      - database.env
    volumes:
      - database-data:/etc/postgres/data
  as:
    restart: always
    env_file:
      - athlete_stats.env
    build: .
    command: gunicorn athlete_stats.wsgi:application --bind 0.0.0.0:5000 --access-logfile  /etc/athlete-stats/logs/gunicorn.log --capture-output
    volumes:
        - /etc/athlete-stats/logs:/etc/athlete-stats/logs
        - /etc/athlete-stats/static:/etc/athlete-stats/static
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.stats.rule=Host(`$HOST`)"
        - "traefik.http.routers.stats.entrypoints=websecure"
        - "traefik.http.routers.stats.tls.certresolver=myresolver"
    expose:
        - 5000
    depends_on:
      - as_db
      - traefik

volumes:
  database-data:
